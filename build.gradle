buildscript {
	ext {
		springBootVersion = '1.4.0.RELEASE'
	}
	repositories {
		mavenLocal()
		mavenCentral()
		maven { url "http://172.16.100.98/nexus/content/groups/public/"}
		maven { url "http://repo.spring.io/release" }
		maven { url "http://repo.spring.io/milestone" }
		maven { url "http://repo.spring.io/snapshot" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'

jar {
	baseName = 'doorgod-apigateway'
	version = '1.0.0'

	exclude('logback-test.xml')
	exclude('logback.xml')
	exclude('version.txt')
	exclude{ it.name.endsWith('.properties');}
}
compileJava {
	sourceCompatibility = 1.8
	targetCompatibility = 1.8
	options.encoding = 'UTF-8'
}
repositories {
	mavenLocal()
	mavenCentral()
	maven { url "http://172.16.100.98/nexus/content/groups/public/"}
	maven { url "http://repo.spring.io/release" }
	maven { url "http://repo.spring.io/milestone" }
	maven { url "http://repo.spring.io/snapshot" }
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter')
	compile("org.springframework.boot:spring-boot-starter-web")
	compile("org.springframework.boot:spring-boot-starter-tomcat")
	compile 'io.vertx:vertx-core:3.3.3'
	compile 'io.vertx:vertx-mongo-client:3.3.3'
	compile 'com.ymatou.disconf:disconf-client:2.6.35'
	compile 'org.slf4j:slf4j-api:1.7.21'
	compile 'ch.qos.logback:logback-classic:1.1.7'
	compile 'com.netflix.hystrix:hystrix-metrics-event-stream:1.5.5'
	compile 'org.codehaus.groovy:groovy-all:2.4.7'
	compile 'org.apache.kafka:kafka_2.11:0.10.0.1'
	compile 'com.alibaba:fastjson:1.2.17'
	compile 'io.vertx:vertx-mysql-postgresql-client:3.3.3'
	compile 'com.google.guava:guava:19.0'
	compile ('com.ymatou.errorreporter:errorreporter-logback:1.0.4') {
		exclude group: 'io.netty'
	}
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.jmockit:jmockit:1.28')
}

configurations {
	compile.exclude module: 'slf4j-log4j12'
}

//复制启动，停止脚本
task copyScript(type: Copy) {
	into "$buildDir/dist"
	from "$projectDir/script"
}

//复制jar
task copyJars(type: Copy,dependsOn:jar) {
	from configurations.runtime  //项目所有的jar依赖
	from "$buildDir/libs"        //本项目jar
	into "$buildDir/dist/lib"
}

//复制配置
task copyConfig(type: Copy){
	from "$projectDir/src/main/resources/"
	into "$buildDir/dist/conf"
	include 'logback.xml'
	include 'version.txt'
}

//打包发布 发布为：gradle release 默认位置为：build/distributions
task release(type: Zip,dependsOn:[clean,copyScript,copyJars,copyConfig]) {
	archiveName="doorgod-apigateway.zip"
	from "$buildDir/dist"
}
